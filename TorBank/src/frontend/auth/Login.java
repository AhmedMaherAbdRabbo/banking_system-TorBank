/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package frontend.auth;


import backend.connections.DatabaseConnections;
import backend.controllers.UserController;
import frontend.dashboard.Dashboard;
import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import java.sql.ResultSet;
import javax.swing.SwingUtilities;

/**
 *
 * @author DELL
 */
public class Login extends javax.swing.JPanel {

    /**
     * Creates new form Login
     */
    public Login() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        userNametf = new javax.swing.JTextField();
        passwordtf = new javax.swing.JPasswordField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnlogin = new javax.swing.JButton();
        btncancel = new javax.swing.JButton();
        SignUp = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();

        jPanel1.setBackground(new java.awt.Color(22, 26, 48));

        userNametf.setBackground(new java.awt.Color(240, 236, 229));

        passwordtf.setBackground(new java.awt.Color(240, 236, 229));

        jLabel1.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("What's your E-mail?");

        jLabel2.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Your password?");

        btnlogin.setBackground(new java.awt.Color(96, 114, 116));
        btnlogin.setFont(new java.awt.Font("Segoe Print", 1, 14)); // NOI18N
        btnlogin.setForeground(new java.awt.Color(255, 255, 255));
        btnlogin.setText("Login");
        btnlogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnloginActionPerformed(evt);
            }
        });

        btncancel.setBackground(new java.awt.Color(96, 114, 116));
        btncancel.setFont(new java.awt.Font("Segoe Print", 1, 14)); // NOI18N
        btncancel.setForeground(new java.awt.Color(255, 255, 255));
        btncancel.setText("cancel");
        btncancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncancelActionPerformed(evt);
            }
        });

        SignUp.setFont(new java.awt.Font("Segoe Print", 1, 22)); // NOI18N
        SignUp.setForeground(new java.awt.Color(255, 255, 255));
        SignUp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/add-user (1).png"))); // NOI18N
        SignUp.setText("Sign up");
        SignUp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SignUpMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                SignUpMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                SignUpMouseExited(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(240, 236, 229));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(22, 26, 48));
        jLabel3.setText("Login or sign up");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(234, 234, 234)
                .addComponent(jLabel3)
                .addContainerGap(249, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel3)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(passwordtf, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(41, 41, 41)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(176, 176, 176)
                            .addComponent(userNametf, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(414, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btnlogin, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(btncancel, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(SignUp, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(66, 66, 66))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(userNametf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addComponent(jLabel2)
                .addGap(32, 32, 32)
                .addComponent(passwordtf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnlogin)
                    .addComponent(btncancel))
                .addGap(31, 31, 31)
                .addComponent(SignUp)
                .addGap(51, 51, 51))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnloginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnloginActionPerformed

    
        String email = userNametf.getText().trim();
    String password = new String(passwordtf.getPassword());
    
    // Basic validation
    if (email.isEmpty() || password.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Email and password cannot be empty", "Login Error", JOptionPane.ERROR_MESSAGE);
        return;
    }
    
    Connection conn = null;
    PreparedStatement stmt = null;
    ResultSet rs = null;
    
    try {
        conn = DatabaseConnections.getConnection();
        if (conn == null) {
            JOptionPane.showMessageDialog(this, "Failed to connect to the database", "Database Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        // Use PreparedStatement to prevent SQL injection
        String sql = "SELECT user_id, email FROM users WHERE email = ? AND password = ?";
        stmt = conn.prepareStatement(sql);
        stmt.setString(1, email);
        stmt.setString(2, password);
        
        rs = stmt.executeQuery();
        
        if (rs.next()) {
            // Get user details from result set
            int userId = rs.getInt("user_id");
            String userEmail = rs.getString("email");
            
            // Store user details in UserController
            UserController.setUserDetails(userId, userEmail);
            
            // Variables to store user information
            String userName = "";
            String accountType = "";
            long accountNumber = 0;
            String lastTransaction = "No transactions found";
            double balance = 0.0;
            
            // Get user name and additional information
            try (PreparedStatement nameStmt = conn.prepareStatement("SELECT name FROM users WHERE user_id = ?")) {
                nameStmt.setInt(1, userId);
                try (ResultSet nameRs = nameStmt.executeQuery()) {
                    if (nameRs.next()) {
                        userName = nameRs.getString("name");
                    }
                }
                
                // Get account information using try-with-resources
                try (PreparedStatement accountStmt = conn.prepareStatement(
                        "SELECT account_number, account_type, balance FROM accounts WHERE user_id = ?")) {
                    accountStmt.setInt(1, userId);
                    try (ResultSet accountRs = accountStmt.executeQuery()) {
                        if (accountRs.next()) {
                            accountNumber = accountRs.getLong("account_number");
                            accountType = accountRs.getString("account_type");
                            balance = accountRs.getDouble("balance");
                        }
                    }
                }
                
                // Get last transaction with improved query
                try (PreparedStatement transStmt = conn.prepareStatement(
                        "SELECT transaction_type, amount, transaction_date FROM transactions " +
                        "WHERE user_id = ? ORDER BY transaction_date DESC LIMIT 1")) {
                    transStmt.setInt(1, userId);
                    try (ResultSet transRs = transStmt.executeQuery()) {
                        if (transRs.next()) {
                            String type = transRs.getString("transaction_type");
                            double amount = transRs.getDouble("amount");
                            String date = transRs.getTimestamp("transaction_date").toString();
                            lastTransaction = type + ": $" + String.format("%.2f", amount) + " on " + date;
                        }
                    }
                }
                
                // Log successful login (optional)
                try (PreparedStatement logStmt = conn.prepareStatement(
                        "INSERT INTO login_logs (user_id, login_time, status) VALUES (?, NOW(), ?)")) {
                    logStmt.setInt(1, userId);
                    logStmt.setString(2, "SUCCESS");
                    logStmt.executeUpdate();
                } catch (SQLException logEx) {
                    // Non-critical error, don't disrupt login process
                    System.err.println("Could not log login attempt: " + logEx.getMessage());
                }
                
            } catch (SQLException e) {
                System.err.println("Error retrieving user data: " + e.getMessage());
                // Continue with login process using default values
            }
            
            JOptionPane.showMessageDialog(this, "Login successful. Welcome, " + userName + "!", 
                                         "Login Success", JOptionPane.INFORMATION_MESSAGE);
            
            // Create and configure Dashboard panel
            Dashboard dashboardPanel = new Dashboard();
            dashboardPanel.updateUserInfo(userName, accountType, accountNumber, lastTransaction);
            
            // Get the main JFrame and switch to Dashboard
            JFrame mainFrame = (JFrame) SwingUtilities.getWindowAncestor(this);
            mainFrame.getContentPane().removeAll();
            mainFrame.getContentPane().add(dashboardPanel);
            
            // Set appropriate size
            mainFrame.pack();
            
            // Center the frame on screen (optional)
            mainFrame.setLocationRelativeTo(null);
            
            // Refresh UI
            mainFrame.revalidate();
            mainFrame.repaint();
        } else {
            // Failed login
            JOptionPane.showMessageDialog(this, "Invalid email or password", 
                                         "Login Failed", JOptionPane.ERROR_MESSAGE);
            
            // Clear password field for security
            passwordtf.setText("");
            
            // Optional: Log failed login attempt
            try (PreparedStatement logStmt = conn.prepareStatement(
                    "INSERT INTO login_logs (email, login_time, status) VALUES (?, NOW(), ?)")) {
                logStmt.setString(1, email);
                logStmt.setString(2, "FAILED");
                logStmt.executeUpdate();
            } catch (SQLException logEx) {
                // Non-critical error
                System.err.println("Could not log failed login attempt: " + logEx.getMessage());
            }
        }
    } catch (SQLException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Database error: " + e.getMessage(), 
                                     "Database Error", JOptionPane.ERROR_MESSAGE);
    } finally {
        // Close resources in reverse order of creation
        try {
            if (rs != null) rs.close();
            if (stmt != null) stmt.close();
            if (conn != null && !conn.isClosed()) conn.close();
        } catch (SQLException e) {
            System.err.println("Error closing database resources: " + e.getMessage());
        }
    }
    
    }//GEN-LAST:event_btnloginActionPerformed

    private void btncancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncancelActionPerformed
        // Close the program
        System.exit(0);
    }//GEN-LAST:event_btncancelActionPerformed

    private void SignUpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SignUpMouseClicked

    Register registerPanel = new Register();

            JFrame mainFrame = (JFrame) SwingUtilities.getWindowAncestor(this);
            
            // Clear the frame's content and add the Dashboard panel
            mainFrame.getContentPane().removeAll();
            mainFrame.getContentPane().add(registerPanel);
            
            registerPanel.setSize(registerPanel.getPreferredSize());
            registerPanel.setPreferredSize(registerPanel.getPreferredSize());
            mainFrame.pack();
            
            // Refresh the frame to display the new panel
            mainFrame.revalidate();
            mainFrame.repaint();    

    this.setVisible(false); 
    }//GEN-LAST:event_SignUpMouseClicked

    private void SignUpMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SignUpMouseEntered
        SignUp.setForeground(Color.cyan);
    }//GEN-LAST:event_SignUpMouseEntered

    private void SignUpMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SignUpMouseExited
        SignUp.setForeground(Color.LIGHT_GRAY);
    }//GEN-LAST:event_SignUpMouseExited


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel SignUp;
    private javax.swing.JButton btncancel;
    private javax.swing.JButton btnlogin;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPasswordField passwordtf;
    private javax.swing.JTextField userNametf;
    // End of variables declaration//GEN-END:variables
}
