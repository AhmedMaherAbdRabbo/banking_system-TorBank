/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package frontend.dashboard;

import javax.swing.JFrame;
import backend.connections.DatabaseConnections;
import java.math.BigDecimal;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

// مكتبات SQL للتعامل مع قاعدة البيانات
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

// لو بتستخدم أنواع بيانات إضافية
import java.sql.Statement;
import backend.controllers.UserController;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author DELL
 */
public class transactions extends javax.swing.JPanel {

    /**
     * Creates new form NewJPanel
     */
    public transactions() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        CheckBalnced = new javax.swing.JButton();
        Withdraw = new javax.swing.JButton();
        TransactionHistory = new javax.swing.JButton();
        Deposit = new javax.swing.JButton();
        FundTransfer = new javax.swing.JButton();

        jPanel1.setBackground(new java.awt.Color(240, 236, 229));

        jPanel2.setBackground(new java.awt.Color(22, 26, 48));

        jButton1.setText("dashboard");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("account");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("transactions");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(68, 68, 68)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(70, 70, 70)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(290, Short.MAX_VALUE))
        );

        CheckBalnced.setBackground(new java.awt.Color(197, 193, 187));
        CheckBalnced.setText("Check balnced");
        CheckBalnced.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckBalncedActionPerformed(evt);
            }
        });

        Withdraw.setBackground(new java.awt.Color(197, 193, 187));
        Withdraw.setText("Withdraw");
        Withdraw.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WithdrawActionPerformed(evt);
            }
        });

        TransactionHistory.setBackground(new java.awt.Color(197, 193, 187));
        TransactionHistory.setText("Transaction history");
        TransactionHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TransactionHistoryActionPerformed(evt);
            }
        });

        Deposit.setBackground(new java.awt.Color(197, 193, 187));
        Deposit.setText("Deposit");
        Deposit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DepositActionPerformed(evt);
            }
        });

        FundTransfer.setBackground(new java.awt.Color(197, 193, 187));
        FundTransfer.setText("Fund transfer");
        FundTransfer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FundTransferActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(111, 111, 111)
                        .addComponent(Withdraw, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 159, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TransactionHistory, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Deposit, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(94, 94, 94))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(CheckBalnced, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(263, 263, 263))))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(330, 330, 330)
                    .addComponent(FundTransfer, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(419, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(117, 117, 117)
                .addComponent(Deposit, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(CheckBalnced, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(102, 102, 102)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Withdraw, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TransactionHistory, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(145, 145, 145))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(127, 127, 127)
                    .addComponent(FundTransfer, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(450, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void CheckBalncedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckBalncedActionPerformed

        try {
        // Get current user's account balance
        int userId = UserController.getUserId();
        String sql = "SELECT balance FROM accounts WHERE user_id = ?";
        
        try (Connection conn = DatabaseConnections.getConnection();
             PreparedStatement stmt = conn.prepareStatement(sql)) {
            
            stmt.setInt(1, userId);
            ResultSet rs = stmt.executeQuery();
            
            if (rs.next()) {
                double balance = rs.getDouble("balance");
                JOptionPane.showMessageDialog(this, 
                    "Your balance: $" + balance,
                    "Account Balance", 
                    JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, 
                    "No account found",
                    "Error", 
                    JOptionPane.WARNING_MESSAGE);
            }
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, 
            "Error checking balance",
            "Database Error", 
            JOptionPane.ERROR_MESSAGE);
    }
        
        
    }//GEN-LAST:event_CheckBalncedActionPerformed

    private void WithdrawActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WithdrawActionPerformed
    // أنشئ صفحة Withdraw
    Withdraw withdrawPanel = new Withdraw();

    // أنشئ نافذة جديدة للـ Withdraw
    JFrame frame = new JFrame("Withdraw Page");
    frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);  // غلق الإطار عند إغلاقه
    frame.setContentPane(withdrawPanel);  // تعيين panel جديد كـ content
    frame.pack();  // تهيئة حجم النافذة
    frame.setLocationRelativeTo(null);  // وضع الإطار في منتصف الشاشة
    frame.setVisible(true);  // جعل النافذة مرئية

    // إخفاء الإطار الحالي
    this.setVisible(false);
    }//GEN-LAST:event_WithdrawActionPerformed

    private void TransactionHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TransactionHistoryActionPerformed
        DefaultTableModel model = new DefaultTableModel();
    model.addColumn("Date");
    model.addColumn("Type");
    model.addColumn("From Account");
    model.addColumn("To Account");
    model.addColumn("Amount");

    try (Connection conn = DatabaseConnections.getConnection()) {
        String sql = "SELECT transaction_date, transaction_type, from_account, " +
                     "to_account, amount FROM transactions " +
                     "WHERE user_id = ? ORDER BY transaction_date DESC";
        
        PreparedStatement stmt = conn.prepareStatement(sql);
        stmt.setInt(1, UserController.getUserId());
        ResultSet rs = stmt.executeQuery();

        while (rs.next()) {
            model.addRow(new Object[]{
                rs.getTimestamp("transaction_date"),
                rs.getString("transaction_type"),
                rs.getLong("from_account"),
                rs.getLong("to_account"),
                rs.getDouble("amount")
            });
        }

        JTable table = new JTable(model);
        JScrollPane scrollPane = new JScrollPane(table);
        JOptionPane.showMessageDialog(this, scrollPane, 
            "Transaction History", JOptionPane.PLAIN_MESSAGE);

    } catch (SQLException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error loading transactions: " + e.getMessage());
    }
    }//GEN-LAST:event_TransactionHistoryActionPerformed

    private void DepositActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DepositActionPerformed
        // أنشئ صفحة Deposit
    Deposit depositPanel = new Deposit();

    // أنشئ نافذة جديدة للـ Deposit
    JFrame frame = new JFrame("Deposit Page");
    frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);  // غلق الإطار عند إغلاقه
    frame.setContentPane(depositPanel);  // تعيين panel جديد كـ content
    frame.pack();  // تهيئة حجم النافذة
    frame.setLocationRelativeTo(null);  // وضع الإطار في منتصف الشاشة
    frame.setVisible(true);  // جعل النافذة مرئية

    // إخفاء الإطار الحالي
    this.setVisible(false);
    }//GEN-LAST:event_DepositActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    // Get user ID
    int userId = UserController.getUserId();

    // Create Dashboard panel
    Dashboard dashboardPanel = new Dashboard();

    // Get the main JFrame that contains the current panel
    JFrame mainFrame = (JFrame) SwingUtilities.getWindowAncestor(this);

    // Clear the frame's content and add the dashboard panel
    mainFrame.getContentPane().removeAll();
    mainFrame.getContentPane().add(dashboardPanel);

    // Refresh the frame to display the new panel
    mainFrame.revalidate();
    mainFrame.repaint();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       
        // أنشئ صفحة Account
account accountPanel = new account();

    // الحصول على الإطار الرئيسي الذي يحتوي على هذا الـ panel
    JFrame mainFrame = (JFrame) SwingUtilities.getWindowAncestor(this);

    // إزالة جميع المحتويات من الإطار وإضافة لوحة الحساب
    mainFrame.getContentPane().removeAll();
    mainFrame.getContentPane().add(accountPanel);

    // تحديث الإطار لعرض اللوحة الجديدة
    mainFrame.revalidate();
    mainFrame.repaint();

    }//GEN-LAST:event_jButton2ActionPerformed

    private void FundTransferActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FundTransferActionPerformed

        // أنشئ صفحة FundTransfer
    FundTransfer fundTransferPanel = new FundTransfer();

    // أنشئ نافذة جديدة للـ FundTransfer
    JFrame frame = new JFrame("Fund Transfer Page");
    frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);  // غلق الإطار عند إغلاقه
    frame.setContentPane(fundTransferPanel);  // تعيين panel جديد كـ content
    frame.pack();  // تهيئة حجم النافذة
    frame.setLocationRelativeTo(null);  // وضع الإطار في منتصف الشاشة
    frame.setVisible(true);  // جعل النافذة مرئية

    // إخفاء الإطار الحالي
    this.setVisible(false);
        
        
    }//GEN-LAST:event_FundTransferActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CheckBalnced;
    private javax.swing.JButton Deposit;
    private javax.swing.JButton FundTransfer;
    private javax.swing.JButton TransactionHistory;
    private javax.swing.JButton Withdraw;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables
}
