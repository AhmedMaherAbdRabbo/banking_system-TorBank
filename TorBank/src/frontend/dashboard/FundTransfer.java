/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package frontend.dashboard;


import backend.connections.DatabaseConnections;
import java.math.BigDecimal;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import backend.controllers.UserController;
import java.util.HashMap;
import java.util.Map;
/**
 *
 * @author DELL
 */
public class FundTransfer extends javax.swing.JPanel {

    /**
     * Creates new form FundTransfer
     */
    public FundTransfer() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        fromAccountField = new javax.swing.JTextField();
        transferAmount = new javax.swing.JTextField();
        transferAmountField = new javax.swing.JTextField();
        FundTransfer = new javax.swing.JButton();
        Back = new javax.swing.JButton();

        jPanel1.setBackground(new java.awt.Color(240, 236, 229));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel1.setText("From Account Number");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("To Account Number");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel3.setText("transfer Amount");

        fromAccountField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fromAccountFieldActionPerformed(evt);
            }
        });

        FundTransfer.setBackground(new java.awt.Color(22, 26, 48));
        FundTransfer.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        FundTransfer.setForeground(new java.awt.Color(255, 255, 255));
        FundTransfer.setText("Fund transfer");
        FundTransfer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FundTransferActionPerformed(evt);
            }
        });

        Back.setBackground(new java.awt.Color(22, 26, 48));
        Back.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        Back.setForeground(new java.awt.Color(255, 255, 255));
        Back.setText("Back");
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(Back, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(transferAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 155, Short.MAX_VALUE)
                                .addComponent(FundTransfer, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(fromAccountField, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(transferAmountField, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))))
                        .addGap(83, 83, 83))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(47, 47, 47)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fromAccountField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(transferAmountField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(68, 68, 68)
                .addComponent(jLabel3)
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(transferAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FundTransfer, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                .addComponent(Back, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void FundTransferActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FundTransferActionPerformed
    long fromAccount = Long.parseLong(fromAccountField.getText());
    long toAccount = Long.parseLong(transferAmountField.getText());
    double amount = Double.parseDouble(transferAmount.getText()); 
    
    if (amount <= 0) {
        JOptionPane.showMessageDialog(null, "Transfer amount must be greater than zero.");
        return;
    }

    if (fromAccount == toAccount) {
        JOptionPane.showMessageDialog(null, "Cannot transfer to the same account.");
        return;
    }

    try (Connection conn = DatabaseConnections.getConnection()) {
        if (conn == null) {
            JOptionPane.showMessageDialog(null, "Failed to connect to the database");
            return;
        }

        conn.setAutoCommit(false);

        try {
            String sqlCheckAccounts = "SELECT account_number, balance FROM accounts " +
                                    "WHERE account_number IN (?, ?) FOR UPDATE";
            PreparedStatement stmtCheck = conn.prepareStatement(sqlCheckAccounts);
            stmtCheck.setLong(1, fromAccount);
            stmtCheck.setLong(2, toAccount);
            ResultSet rs = stmtCheck.executeQuery();

            Map<Long, Double> accountBalances = new HashMap<>();
            while (rs.next()) {
                accountBalances.put(rs.getLong("account_number"), rs.getDouble("balance"));
            }

            if (!accountBalances.containsKey(fromAccount)) {
                JOptionPane.showMessageDialog(null, "Source account not found.");
                conn.rollback();  
                return;
            }

            if (!accountBalances.containsKey(toAccount)) {
                JOptionPane.showMessageDialog(null, "Destination account not found.");
                conn.rollback(); 
                return;
            }

            // 2. Check sufficient funds in source account
            if (accountBalances.get(fromAccount) < amount) {
                JOptionPane.showMessageDialog(null, "Insufficient funds for transfer.");
                conn.rollback();  
                return;
            }

            
            String sqlUpdateFrom = "UPDATE accounts SET balance = balance - ? WHERE account_number = ?";
            PreparedStatement stmtUpdateFrom = conn.prepareStatement(sqlUpdateFrom);
            stmtUpdateFrom.setDouble(1, amount);
            stmtUpdateFrom.setLong(2, fromAccount);
            int fromUpdated = stmtUpdateFrom.executeUpdate();

            String sqlUpdateTo = "UPDATE accounts SET balance = balance + ? WHERE account_number = ?";
            PreparedStatement stmtUpdateTo = conn.prepareStatement(sqlUpdateTo);
            stmtUpdateTo.setDouble(1, amount);
            stmtUpdateTo.setLong(2, toAccount);
            int toUpdated = stmtUpdateTo.executeUpdate();

            if (fromUpdated == 0 || toUpdated == 0) {
                conn.rollback();
                JOptionPane.showMessageDialog(null, "Failed to update accounts.");
                return;
            }

            int userId = UserController.getUserId();
            if (userId <= 0) {
                conn.rollback();
                JOptionPane.showMessageDialog(null, "No valid user session. Please login again.");
                return;
            }

            String sqlTransaction = "INSERT INTO transactions " +
                                  "(from_account, to_account, amount, transaction_type, user_id) " +
                                  "VALUES (?, ?, ?, ?, ?)";
            PreparedStatement stmtTransaction = conn.prepareStatement(sqlTransaction);
            stmtTransaction.setLong(1, fromAccount);
            stmtTransaction.setLong(2, toAccount);
            stmtTransaction.setDouble(3, amount);
            stmtTransaction.setString(4, "Transfer");
            stmtTransaction.setInt(5, userId);

            int rowsInserted = stmtTransaction.executeUpdate();

            if (rowsInserted > 0) {
                conn.commit();
                JOptionPane.showMessageDialog(null, 
                    "Transfer successful! $" + amount + " transferred from account " + 
                    fromAccount + " to account " + toAccount);
                
                fromAccountField.setText("");
                transferAmountField.setText("");
                transferAmount.setText("");
            } else {
                conn.rollback();
                JOptionPane.showMessageDialog(null, "Failed to record transaction.");
            }
        } catch (SQLException e) {
            conn.rollback();
            throw e;
        }
    } catch (SQLException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(null, "Database error: " + e.getMessage());
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(null, "Please enter valid numbers for account numbers and amount.");
    }
    }//GEN-LAST:event_FundTransferActionPerformed

    private void fromAccountFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fromAccountFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fromAccountFieldActionPerformed

    private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed
    transactions mainMenuPanel = new transactions();
    JFrame mainFrame = (JFrame) SwingUtilities.getWindowAncestor(this);

    mainFrame.getContentPane().removeAll();
    mainFrame.getContentPane().add(mainMenuPanel);
    mainFrame.pack();

    mainFrame.revalidate();
    mainFrame.repaint();
    mainFrame.setLocationRelativeTo(null); 
    }//GEN-LAST:event_BackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Back;
    private javax.swing.JButton FundTransfer;
    private javax.swing.JTextField fromAccountField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField transferAmount;
    private javax.swing.JTextField transferAmountField;
    // End of variables declaration//GEN-END:variables
}
